/*
 * FinancialsView.java
 */

package financialsthreaded;

import business.Annuity;
import business.Loan;
import business.PV;
import business.Financial;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class FinancialsThreadedView extends FrameView {
    Financial f;
    public FinancialsThreadedView(SingleFrameApplication app) {
        super(app);

        initComponents();
        //jradPV.setVisible(false);
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FinancialsThreadedApp.getApplication().getMainFrame();
            aboutBox = new FinancialsThreadedAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FinancialsThreadedApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtAmt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtRate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtTerm = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtResult = new javax.swing.JTextField();
        jbtnCalc = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jradAnnuity = new javax.swing.JRadioButton();
        jradLoan = new javax.swing.JRadioButton();
        jbtnSched = new javax.swing.JButton();
        jbtnClear = new javax.swing.JButton();
        jradPV = new javax.swing.JRadioButton();
        jbtnModel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtxtRate2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtxtRateInc = new javax.swing.JTextField();
        jbtnModelDG = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(financialsthreaded.FinancialsThreadedApp.class).getContext().getResourceMap(FinancialsThreadedView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jtxtAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtAmt.setText(resourceMap.getString("jtxtAmt.text")); // NOI18N
        jtxtAmt.setToolTipText(resourceMap.getString("jtxtAmt.toolTipText")); // NOI18N
        jtxtAmt.setName("jtxtAmt"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jtxtRate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtRate.setToolTipText(resourceMap.getString("jtxtRate.toolTipText")); // NOI18N
        jtxtRate.setName("jtxtRate"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jtxtTerm.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtTerm.setToolTipText(resourceMap.getString("jtxtTerm.toolTipText")); // NOI18N
        jtxtTerm.setName("jtxtTerm"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jtxtResult.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtResult.setToolTipText(resourceMap.getString("jtxtResult.toolTipText")); // NOI18N
        jtxtResult.setName("jtxtResult"); // NOI18N

        jbtnCalc.setText(resourceMap.getString("jbtnCalc.text")); // NOI18N
        jbtnCalc.setName("jbtnCalc"); // NOI18N
        jbtnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCalcActionPerformed(evt);
            }
        });

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        buttonGroup1.add(jradAnnuity);
        jradAnnuity.setText(resourceMap.getString("jradAnnuity.text")); // NOI18N
        jradAnnuity.setName("jradAnnuity"); // NOI18N
        jradAnnuity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradAnnuityItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradLoan);
        jradLoan.setText(resourceMap.getString("jradLoan.text")); // NOI18N
        jradLoan.setName("jradLoan"); // NOI18N
        jradLoan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradLoanItemStateChanged(evt);
            }
        });

        jbtnSched.setText(resourceMap.getString("jbtnSched.text")); // NOI18N
        jbtnSched.setEnabled(false);
        jbtnSched.setName("jbtnSched"); // NOI18N
        jbtnSched.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSchedActionPerformed(evt);
            }
        });

        jbtnClear.setText(resourceMap.getString("jbtnClear.text")); // NOI18N
        jbtnClear.setName("jbtnClear"); // NOI18N
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        buttonGroup1.add(jradPV);
        jradPV.setText(resourceMap.getString("jradPV.text")); // NOI18N
        jradPV.setToolTipText(resourceMap.getString("jradPV.toolTipText")); // NOI18N
        jradPV.setName("jradPV"); // NOI18N
        jradPV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradPVItemStateChanged(evt);
            }
        });

        jbtnModel.setText(resourceMap.getString("jbtnModel.text")); // NOI18N
        jbtnModel.setName("jbtnModel"); // NOI18N
        jbtnModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnModelActionPerformed(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jtxtRate2.setText(resourceMap.getString("jtxtRate2.text")); // NOI18N
        jtxtRate2.setName("jtxtRate2"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jtxtRateInc.setName("jtxtRateInc"); // NOI18N

        jbtnModelDG.setText(resourceMap.getString("jbtnModelDG.text")); // NOI18N
        jbtnModelDG.setName("jbtnModelDG"); // NOI18N
        jbtnModelDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnModelDGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtnSched)
                .addGap(114, 114, 114))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(303, Short.MAX_VALUE)
                .addComponent(jbtnClear)
                .addGap(132, 132, 132))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54))
                                .addGroup(mainPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(47, 47, 47)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtRate2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtRateInc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jradAnnuity)
                        .addGap(18, 18, 18)
                        .addComponent(jradLoan)
                        .addGap(18, 18, 18)
                        .addComponent(jradPV))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jbtnCalc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnModel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnModelDG)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jradAnnuity)
                    .addComponent(jradLoan)
                    .addComponent(jradPV))
                .addGap(34, 34, 34)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jtxtRateInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jtxtRate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnCalc)
                    .addComponent(jbtnModel)
                    .addComponent(jbtnModelDG))
                .addGap(13, 13, 13)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnSched)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnClear)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(financialsthreaded.FinancialsThreadedApp.class).getContext().getActionMap(FinancialsThreadedView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

private void jradLoanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradLoanItemStateChanged
    if (jradLoan.isSelected()) {
        jLabel1.setText(Loan.AMOUNTDESC + ":");
        jLabel4.setText(Loan.RESULTDESC + ":");
    }
}//GEN-LAST:event_jradLoanItemStateChanged

private void jradAnnuityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradAnnuityItemStateChanged
   if (jradAnnuity.isSelected()) {
       jLabel1.setText(Annuity.AMOUNTDESC + ":");
       jLabel4.setText(Annuity.RESULTDESC + ":");
   }
}//GEN-LAST:event_jradAnnuityItemStateChanged

private void jbtnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCalcActionPerformed
   statusMessageLabel.setText("");
   double d, r;
   int t;
   NumberFormat c = NumberFormat.getCurrencyInstance();
   try {
       d = Double.parseDouble(jtxtAmt.getText().replace("$", "").replace(",", ""));
       if (d <= 0) {
           statusMessageLabel.setText("Deposit must be positive.");
           jtxtAmt.requestFocusInWindow();
           return ;
       }
   } catch (Exception e) {
       statusMessageLabel.setText("Illegal deposit entry.");
       jtxtAmt.requestFocusInWindow();
       return ;
   }
   
   //repeat try/catch for rate and term (not done in this version)....
   r = Double.parseDouble(jtxtRate.getText());
   t = Integer.parseInt(jtxtTerm.getText());
   
   if (jradAnnuity.isSelected()) {
       //instantiate Annuity and retrieve final value
       f = new Annuity(d,r,t);
   } else if (jradLoan.isSelected()) {
       //same process but for loan
       f = new Loan(d,r,t);
   } else if (jradPV.isSelected()) {
       f = new PV(d,r,t);  
   } 
   jtxtResult.setText(c.format(f.getResult()));
   jbtnSched.setEnabled(true);
}//GEN-LAST:event_jbtnCalcActionPerformed

private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
   jtxtAmt.setText("");
   jtxtRate.setText("");
   jtxtRate2.setText("");
   jtxtRateInc.setText("");
   jtxtTerm.setText("");
   jtxtResult.setText("");
   jbtnSched.setEnabled(false);
   jradAnnuity.setSelected(true);
   jtxtAmt.requestFocusInWindow();
}//GEN-LAST:event_jbtnClearActionPerformed

private void jbtnSchedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSchedActionPerformed
    NumberFormat c = NumberFormat.getCurrencyInstance();
    NumberFormat p = NumberFormat.getPercentInstance();
    p.setMaximumFractionDigits(3);
    
    JTable sched; 
    DefaultTableModel mod;
    if (f instanceof PV) {
        String[] cols = 
           { "Month", f.getIntFactorDesc(), f.getEndBalDesc() };
        String[][] t = new String[f.getTerm()+1][3];
        mod = new DefaultTableModel(t,cols);
        sched = new JTable(mod);
        
        for (int i=0; i <= f.getTerm(); i++) {
            sched.setValueAt(i,i,0);
            sched.setValueAt(c.format(f.getIntFactor(i)),i,1);
            sched.setValueAt(c.format(f.getBegBal(i)),i,2);
        }
    } else {
        String[] cols;
        String[][] t;
        if (f instanceof Loan) {
            cols = new String[] { "Month", f.getBegBalDesc(), f.getPrinFactorDesc(), f.getIntFactorDesc(), f.getEndBalDesc(), "Prin. Paid" };
            t = new String[f.getTerm()][6];
        } else {
           cols = new String[] { "Month", f.getBegBalDesc(), f.getPrinFactorDesc(), f.getIntFactorDesc(), f.getEndBalDesc() };
           t = new String[f.getTerm()][5];
        }
        mod = new DefaultTableModel(t,cols);
        sched = new JTable(mod);
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer)sched.getDefaultRenderer(Object.class);
        renderer.setHorizontalAlignment(JLabel.RIGHT );
        for (int i=0; i < f.getTerm(); i++ ) {
            sched.setValueAt((i+1), i, 0);  //month
            sched.setValueAt(c.format(f.getBegBal(i+1)), i, 1);  //beg bal for month
            sched.setValueAt(c.format(f.getPrinFactor(i+1)), i, 2);
            sched.setValueAt(c.format(f.getIntFactor(i+1)), i, 3);
            sched.setValueAt(c.format(f.getEndBal(i+1)), i, 4);
            if (f instanceof Loan) {
                Loan l = (Loan) f;
                //sched.setValueAt(c.format(l.getPrinPaid(i+1)),i,5);
                sched.setValueAt(c.format(((Loan)f).getPrinPaid(i+1)),i,5);
            }
        }
    }
    //create a display container for JTable...
    JScrollPane sp = new JScrollPane(sched);
    JDialog dg = new JDialog();
    dg.add(sp);
    dg.setTitle(f.getTitle());
    dg.setBounds(150,400,600,300);
    dg.setVisible(true);    
}//GEN-LAST:event_jbtnSchedActionPerformed

    private void jradPVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradPVItemStateChanged
        if (jradPV.isSelected()) {
          jLabel1.setText(PV.AMOUNTDESC);
          jLabel4.setText(PV.RESULTDESC);
        }
    }//GEN-LAST:event_jradPVItemStateChanged

    private void jbtnModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnModelActionPerformed
        double a;
        BigDecimal r, r1, r2, ri;
        int t;
        
        try {
            a = Double.parseDouble(jtxtAmt.getText());
            if (a <= 0) {
                statusMessageLabel.setText("Amount must be positive.");
                return;
            }
            r1 = new BigDecimal(jtxtRate.getText());
            r2 = new BigDecimal(jtxtRate2.getText());
            ri = new BigDecimal(jtxtRateInc.getText());
            t = Integer.parseInt(jtxtTerm.getText());
            
        } catch(NumberFormatException e) {
            statusMessageLabel.setText("Illegal value: " + e.getMessage());
            return;
        }
        
        ArrayList<Financial> fins = new ArrayList<>();
        ArrayList<Thread> threads = new ArrayList<>();
        

        r = r1;
        while (r.compareTo(r2) <= 0) {
            Financial financial = null; //renamed object since Financial f is already declared a global
            String thName = "";
            if (jradLoan.isSelected()) {
                financial = new Loan(a,r.doubleValue(),t);
                thName = "Loan rate: ";
            } else if (jradAnnuity.isSelected()) {
                financial = new Annuity(a,r.doubleValue(),t);
                thName = "Annuity rate: ";
            } else if (jradPV.isSelected()) {
                financial = new PV(a,r.doubleValue(),t);
                thName = "PV rate: ";
            }

            fins.add(financial);
            Thread th = new Thread(financial, thName + r);
            threads.add(th);
            r = r.add(ri);
        }
        for (Thread th : threads) {
            th.start();
        }
        for (Thread th : threads) {
            try {
                while (th.isAlive()) {
                    Thread.sleep(100);
                }
            } catch(InterruptedException e) {
                statusMessageLabel.setText("Thread interrupt " + e.getMessage());
                return;
            }
        }
        statusMessageLabel.setText("Threads completed.");
    }//GEN-LAST:event_jbtnModelActionPerformed

    private void jbtnModelDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnModelDGActionPerformed
        double a;
        BigDecimal r, r1, r2, ri;
        int t;
        
        try {
            a = Double.parseDouble(jtxtAmt.getText());
            if (a <= 0) {
                statusMessageLabel.setText("Amount must be positive.");
                return;
            }
            r1 = new BigDecimal(jtxtRate.getText());
            r2 = new BigDecimal(jtxtRate2.getText());
            ri = new BigDecimal(jtxtRateInc.getText());
            t = Integer.parseInt(jtxtTerm.getText());
            
        } catch(NumberFormatException e) {
            statusMessageLabel.setText("Illegal value: " + e.getMessage());
            return;
        }
        
        ArrayList<Financial> fins = new ArrayList<>();
        ArrayList<Thread> threads = new ArrayList<>();
        
        int rows = 0;
        r = r1;
        while (r.compareTo(r2) <= 0) {
            rows++;
            r = r.add(ri);
        }
        String[] cols = { "Rate", "Result" };
        String[][] cells = new String[rows][2];
        DefaultTableModel mod = new DefaultTableModel(cells,cols);
        JTable sched = new JTable(mod);
        sched.getColumnModel().getColumn(1).setPreferredWidth(350);
        
        r = r1;
        String thName = "";
        while (r.compareTo(r2) <= 0) {
            Financial financial = null;
            if (jradLoan.isSelected()) {
                financial = new Loan(a,r.doubleValue(),t,sched);
                thName = "Loan ";
            } else if (jradAnnuity.isSelected()) {
                financial = new Annuity(a,r.doubleValue(),t,sched);
                thName = "Annuity ";
            } else if (jradPV.isSelected()) {
                financial = new PV(a,r.doubleValue(),t,sched);
                thName = "PV ";
            }
            fins.add(financial);
            Thread th = new Thread(financial, thName + "rate: " + r);
            threads.add(th);
            r = r.add(ri);
        }
        NumberFormat pct = NumberFormat.getPercentInstance();
        pct.setMaximumFractionDigits(3);
        pct.setMinimumFractionDigits(3);
        
        for(int i=0; i< fins.size(); i++) {
            sched.setValueAt(pct.format(fins.get(i).getRate()), i, 0);
        }
        
        JScrollPane sp = new JScrollPane(sched);
        JDialog dg = new JDialog();
        dg.add(sp);
        dg.setTitle(thName + "Modeling Results");
        dg.setBounds(150,400,600,300);
        dg.setVisible(true);
        
        for (Thread th : threads) {
            th.start();
        }
        for (Thread th : threads) {
            try {
                while (th.isAlive()) {
                    Thread.sleep(100);
                }
            } catch(InterruptedException e) {
                statusMessageLabel.setText("Thread interrupt " + e.getMessage());
                return;
            }
        }
        statusMessageLabel.setText("Threads completed.");
    }//GEN-LAST:event_jbtnModelDGActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbtnCalc;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnModel;
    private javax.swing.JButton jbtnModelDG;
    private javax.swing.JButton jbtnSched;
    private javax.swing.JRadioButton jradAnnuity;
    private javax.swing.JRadioButton jradLoan;
    private javax.swing.JRadioButton jradPV;
    private javax.swing.JTextField jtxtAmt;
    private javax.swing.JTextField jtxtRate;
    private javax.swing.JTextField jtxtRate2;
    private javax.swing.JTextField jtxtRateInc;
    private javax.swing.JTextField jtxtResult;
    private javax.swing.JTextField jtxtTerm;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
